@model IEnumerable<CourseViewModel>

@{
    ViewData["Title"] = "Курсове - KitchEd";

    // Get unique values for filter dropdowns
    var categories = Model.Select(c => c.CategoryName).Distinct().OrderBy(c => c);
    var dishTypes = Model.Select(c => c.DishTypeName).Distinct().OrderBy(d => d);
    var skillLevels = Model.Select(c => c.SkillLevelName).Distinct().OrderBy(s => s);

    // Price ranges
    var minPrice = Model.Any() ? Math.Floor(Model.Min(c => c.Price)) : 0;
    var maxPrice = Model.Any() ? Math.Ceiling(Model.Max(c => c.Price)) : 1000;

    // Date ranges - next 3 months by default
    var today = DateTime.Today;
    var threeMonthsLater = today.AddMonths(3);
}

<div class="courses-header py-4">
    <div class="container">
        <div class="row align-items-center">
            <div class="col-md-6">
                <h1 class="mb-0">
                    <i class="fas fa-graduation-cap me-2"></i>
                    Налични курсове
                </h1>
            </div>
            <div class="col-md-6">
                <form id="searchForm" class="d-flex gap-2">
                    <input type="text" class="form-control" id="searchInput" placeholder="Търсене по заглавие...">
                    <button type="button" class="btn btn-primary" id="searchButton">
                        <i class="fas fa-search"></i>
                    </button>
                    <button type="button" class="btn btn-outline-secondary" id="filterToggle">
                        <i class="fas fa-filter"></i>
                    </button>
                </form>
            </div>
        </div>
    </div>
</div>

<div class="container py-3">
    <!-- Filter Panel -->
    <div class="card mb-4" id="filterPanel" style="display: none;">
        <div class="card-body">
            <h5 class="card-title mb-3">Филтри</h5>
            <div class="row g-3">
                <!-- Category Filter -->
                <div class="col-md-4 col-lg-3">
                    <label for="categoryFilter" class="form-label">Категория</label>
                    <select class="form-select filter-control" id="categoryFilter">
                        <option value="">Всички категории</option>
                        @foreach (var category in categories)
                        {
                            <option value="@category">@category</option>
                        }
                    </select>
                </div>

                <!-- Dish Type Filter -->
                <div class="col-md-4 col-lg-3">
                    <label for="dishTypeFilter" class="form-label">Тип ястие</label>
                    <select class="form-select filter-control" id="dishTypeFilter">
                        <option value="">Всички типове</option>
                        @foreach (var dishType in dishTypes)
                        {
                            <option value="@dishType">@dishType</option>
                        }
                    </select>
                </div>

                <!-- Skill Level Filter -->
                <div class="col-md-4 col-lg-3">
                    <label for="skillLevelFilter" class="form-label">Ниво на умения</label>
                    <select class="form-select filter-control" id="skillLevelFilter">
                        <option value="">Всички нива</option>
                        @foreach (var level in skillLevels)
                        {
                            <option value="@level">@level</option>
                        }
                    </select>
                </div>

                <!-- Price Range Filter -->
                <div class="col-md-6 col-lg-3">
                    <label for="priceRange" class="form-label">Цена (лв.)</label>
                    <div class="d-flex gap-2 align-items-center">
                        <input type="number" class="form-control filter-control" id="minPrice" placeholder="От"
                            min="@minPrice" max="@maxPrice" value="@minPrice">
                        <span>-</span>
                        <input type="number" class="form-control filter-control" id="maxPrice" placeholder="До"
                            min="@minPrice" max="@maxPrice" value="@maxPrice">
                    </div>
                </div>

                <!-- Date Range Filter -->
                <div class="col-md-6 col-lg-6">
                    <label class="form-label">Дата на започване -- дата на завършване</label>
                    <div class="d-flex gap-2 align-items-center">
                        <input type="date" class="form-control filter-control" id="startDateFrom"
                            value="@today.ToString("yyyy-MM-dd")">
                        <span>-</span>
                        <input type="date" class="form-control filter-control" id="startDateTo"
                            value="@threeMonthsLater.ToString("yyyy-MM-dd")">
                    </div>
                </div>

                <!-- Filter Buttons -->
                <div class="col-md-12 mt-3">
                    <button type="button" class="btn btn-primary" id="applyFilters">
                        <i class="fas fa-check me-1"></i> Приложи филтри
                    </button>
                    <button type="button" class="btn btn-outline-secondary ms-2" id="resetFilters">
                        <i class="fas fa-undo me-1"></i> Изчисти филтри
                    </button>
                </div>
            </div>
        </div>
    </div>

    <!-- Results Count -->
    <div class="d-flex justify-content-between align-items-center mb-3">
        <p class="mb-0" id="resultsCount">Показани <span id="visibleCount">@Model.Count()</span> от <span
                id="totalCount">@Model.Count()</span> курса</p>
        <div class="btn-group">
            <button type="button" class="btn btn-outline-secondary btn-sm" id="sortByDate">
                <i class="fas fa-calendar me-1"></i> По дата
            </button>
            <button type="button" class="btn btn-outline-secondary btn-sm" id="sortByPrice">
                <i class="fas fa-tag me-1"></i> По цена
            </button>
        </div>
    </div>

    @if (!Model.Any())
    {
        <div class="alert alert-info" role="alert">
            <i class="fas fa-info-circle me-2"></i>
            В момента няма налични курсове.
        </div>
    }
    else
    {
        <div class="row g-4" id="coursesContainer">
            @foreach (var course in Model)
            {
                <div class="col-md-6 col-lg-4 course-item" data-category="@course.CategoryName"
                    data-dishtype="@course.DishTypeName" data-skilllevel="@course.SkillLevelName" data-price="@course.Price"
                    data-date="@course.StartDate.ToString("yyyy-MM-dd")">
                    <div class="card h-100 course-card">
                        <img src="@course.MainImageUrl" class="card-img-top" alt="@course.Title">
                        <div class="card-body">
                            <h5 class="card-title">@course.Title</h5>
                            <p class="card-text text-muted mb-2">
                                <small>
                                    <i class="fas fa-tag me-1"></i> @course.CategoryName
                                    <span class="mx-2">|</span>
                                    <i class="fas fa-utensils me-1"></i> @course.DishTypeName
                                </small>
                            </p>
                            <p class="card-text description-text">@course.Description</p>
                            <div class="course-details">
                                <div class="detail-item">
                                    <i class="fas fa-graduation-cap"></i>
                                    <span>@course.SkillLevelName</span>
                                </div>
                                <div class="detail-item">
                                    <i class="fas fa-calendar"></i>
                                    <span>@course.StartDate.ToString("dd.MM.yyyy")</span>
                                </div>
                                <div class="detail-item">
                                    <i class="fas fa-coins"></i>
                                    <span>@course.Price.ToString("F2") лв.</span>
                                </div>
                            </div>
                        </div>
                        <div class="card-footer bg-transparent border-top-0">
                            <a asp-action="Details" asp-route-id="@course.CourseId" class="btn btn-primary w-100">
                                <i class="fas fa-info-circle me-2"></i>Детайли
                            </a>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
</div>

@section Styles {
    <style>
        .courses-header {
            background-color: #f8f9fa;
            border-bottom: 1px solid #dee2e6;
        }

        .course-card {
            transition: transform 0.2s ease, box-shadow 0.2s ease;
            border: none;
            box-shadow: 0 2px 15px rgba(0, 0, 0, 0.1);
        }

        .course-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 5px 20px rgba(0, 0, 0, 0.15);
        }

        .course-card .card-img-top {
            height: 200px;
            object-fit: cover;
        }

        .description-text {
            display: -webkit-box;
            -webkit-line-clamp: 3;
            -webkit-box-orient: vertical;
            overflow: hidden;
            height: 4.5rem;
        }

        .course-details {
            display: flex;
            flex-wrap: wrap;
            gap: 1rem;
            margin-top: 1rem;
            padding-top: 1rem;
            border-top: 1px solid #dee2e6;
        }

        .detail-item {
            display: flex;
            align-items: center;
            gap: 0.5rem;
            color: #6c757d;
            font-size: 0.9rem;
        }

        #searchForm {
            max-width: 400px;
            margin-left: auto;
        }

        #filterPanel {
            transition: all 0.3s ease;
        }

        .filter-badge {
            background-color: #e9ecef;
            color: #495057;
            padding: 0.25rem 0.5rem;
            border-radius: 0.25rem;
            margin-right: 0.5rem;
            display: inline-flex;
            align-items: center;
            font-size: 0.875rem;
        }

        .filter-badge .close {
            margin-left: 0.5rem;
            font-size: 0.75rem;
            cursor: pointer;
        }

        .btn-group .btn.active {
            background-color: #0d6efd;
            color: white;
        }
    </style>
}

@section Scripts {
    <script>
        // Toggle filter panel
        document.getElementById('filterToggle').addEventListener('click', function () {
            const filterPanel = document.getElementById('filterPanel');
            if (filterPanel.style.display === 'none') {
                filterPanel.style.display = 'block';
            } else {
                filterPanel.style.display = 'none';
            }
        });

        // Apply filters function
        function applyFilters() {
            const searchText = document.getElementById('searchInput').value.toLowerCase();
            const category = document.getElementById('categoryFilter').value;
            const dishType = document.getElementById('dishTypeFilter').value;
            const skillLevel = document.getElementById('skillLevelFilter').value;
            const minPrice = parseFloat(document.getElementById('minPrice').value) || 0;
            const maxPrice = parseFloat(document.getElementById('maxPrice').value) || Infinity;
            const startDateFrom = document.getElementById('startDateFrom').value;
            const startDateTo = document.getElementById('startDateTo').value;

            const courseItems = document.querySelectorAll('.course-item');
            let visibleCount = 0;

            courseItems.forEach(item => {
                const title = item.querySelector('.card-title').textContent.toLowerCase();
                const description = item.querySelector('.description-text').textContent.toLowerCase();
                const itemCategory = item.dataset.category;
                const itemDishType = item.dataset.dishtype;
                const itemSkillLevel = item.dataset.skilllevel;
                const itemPrice = parseFloat(item.dataset.price);
                const itemDate = item.dataset.date;

                // Check if the item matches all filters
                const matchesSearch = title.includes(searchText) || description.includes(searchText);
                const matchesCategory = category === '' || itemCategory === category;
                const matchesDishType = dishType === '' || itemDishType === dishType;
                const matchesSkillLevel = skillLevel === '' || itemSkillLevel === skillLevel;
                const matchesPrice = itemPrice >= minPrice && itemPrice <= maxPrice;
                const matchesDate = (startDateFrom === '' || itemDate >= startDateFrom) &&
                    (startDateTo === '' || itemDate <= startDateTo);

                // Show or hide based on filter matches
                if (matchesSearch && matchesCategory && matchesDishType &&
                    matchesSkillLevel && matchesPrice && matchesDate) {
                    item.style.display = '';
                    visibleCount++;
                } else {
                    item.style.display = 'none';
                }
            });

            // Update results count
            document.getElementById('visibleCount').textContent = visibleCount;
        }

        // Event listeners for filters
        document.getElementById('searchButton').addEventListener('click', applyFilters);
        document.getElementById('searchInput').addEventListener('keyup', function (e) {
            if (e.key === 'Enter') {
                applyFilters();
            }
        });

        document.getElementById('applyFilters').addEventListener('click', applyFilters);

        // Reset filters
        document.getElementById('resetFilters').addEventListener('click', function () {
            document.getElementById('searchInput').value = '';
            document.getElementById('categoryFilter').value = '';
            document.getElementById('dishTypeFilter').value = '';
            document.getElementById('skillLevelFilter').value = '';
            document.getElementById('minPrice').value = '@minPrice';
            document.getElementById('maxPrice').value = '@maxPrice';
            document.getElementById('startDateFrom').value = '@today.ToString("yyyy-MM-dd")';
            document.getElementById('startDateTo').value = '@threeMonthsLater.ToString("yyyy-MM-dd")';

            // Show all courses
            const courseItems = document.querySelectorAll('.course-item');
            courseItems.forEach(item => {
                item.style.display = '';
            });

            // Update results count
            document.getElementById('visibleCount').textContent = document.getElementById('totalCount').textContent;
        });

        // Sorting functionality
        document.getElementById('sortByDate').addEventListener('click', function () {
            sortCourses('date');
            toggleActiveClass(this);
        });

        document.getElementById('sortByPrice').addEventListener('click', function () {
            sortCourses('price');
            toggleActiveClass(this);
        });

        function toggleActiveClass(button) {
            const buttons = document.querySelectorAll('.btn-group .btn');
            buttons.forEach(btn => btn.classList.remove('active'));
            button.classList.add('active');
        }

        function sortCourses(sortBy) {
            const container = document.getElementById('coursesContainer');
            const items = Array.from(container.querySelectorAll('.course-item'));

            items.sort((a, b) => {
                if (sortBy === 'date') {
                    return a.dataset.date.localeCompare(b.dataset.date);
                } else if (sortBy === 'price') {
                    return parseFloat(a.dataset.price) - parseFloat(b.dataset.price);
                }
                return 0;
            });

            // Re-append sorted items
            items.forEach(item => {
                container.appendChild(item);
            });
        }
    </script>
}
