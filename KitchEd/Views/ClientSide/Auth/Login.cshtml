@model LoginViewModel

@{
    ViewData["Title"] = "Вход - KitchEd";
}

<div class="auth-wrapper">
    <div class="auth-container">
        <div class="auth-box">
            <div class="text-center mb-4">
                <h1 class="auth-title">Вход</h1>
                <p class="auth-subtitle">Добре дошли отново в KitchEd</p>
            </div>

            @if (TempData["ErrorMessage"] != null)
            {
                <div class="alert alert-danger alert-dismissible fade show" role="alert">
                    <i class="fas fa-exclamation-circle me-2"></i>
                    @TempData["ErrorMessage"]
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                </div>
            }

            <form asp-action="Login" method="post" class="auth-form">
                @Html.AntiForgeryToken()

                <div class="form-floating mb-3">
                    <input asp-for="Username" class="form-control" placeholder="Потребителско име" />
                    <label asp-for="Username"><i class="fas fa-user me-2"></i>Потребителско име</label>
                    <span asp-validation-for="Username" class="text-danger"></span>
                </div>

                <div class="form-floating mb-3">
                    <input asp-for="Password" class="form-control" type="password" placeholder="Парола" />
                    <label asp-for="Password"><i class="fas fa-lock me-2"></i>Парола</label>
                    <span asp-validation-for="Password" class="text-danger"></span>
                </div>

                <div class="form-check mb-3">
                    <input asp-for="RememberMe" class="form-check-input" />
                    <label asp-for="RememberMe" class="form-check-label">Запомни ме</label>
                </div>

                <div class="mb-3">
                    <div class="g-recaptcha" data-sitekey="@ViewBag.RecaptchaSiteKey"></div>
                    @if (!ViewData.ModelState.IsValid && ViewData.ModelState[""].Errors.Any(e =>
                                        e.ErrorMessage.Contains("робот")))
                    {
                        <span class="text-danger">Моля, потвърдете, че не сте робот.</span>
                    }
                </div>

                <button type="submit" class="btn btn-primary w-100 mb-3">
                    <i class="fas fa-sign-in-alt me-2"></i>Вход
                </button>

                <div class="text-center">
                    <p class="mb-0">Нямате акаунт?</p>
                    <a asp-action="Register" class="btn btn-link">Регистрирайте се</a>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script src="https://www.google.com/recaptcha/api.js" async defer></script>
    <script>
        document.querySelector('form').addEventListener('submit', function (e) {
            var recaptchaResponse = grecaptcha.getResponse();
            if (!recaptchaResponse) {
                e.preventDefault();
                alert('Моля, потвърдете, че не сте робот.');
                return false;
            }

            // Add the recaptcha response to a hidden field
            var input = document.createElement('input');
            input.type = 'hidden';
            input.name = 'RecaptchaResponse';
            input.value = recaptchaResponse;
            this.appendChild(input);
        });
    </script>
}
